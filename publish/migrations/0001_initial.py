# Generated by Django 3.1.5 on 2021-08-29 11:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import publish.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.BooleanField(default=False)),
                ('content', models.CharField(max_length=500)),
                ('record', models.FileField(blank=True, null=True, upload_to=publish.models.get_post_upload_path)),
                ('DatePublished', models.DateTimeField(auto_now_add=True)),
                ('fixed', models.BooleanField(default=False)),
                ('angry', models.ManyToManyField(blank=True, related_name='blogpost_angry', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_author', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_group', to='media.group')),
                ('haha', models.ManyToManyField(blank=True, related_name='blogpost_haha', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='blogpost_like', to=settings.AUTH_USER_MODEL)),
                ('love', models.ManyToManyField(blank=True, related_name='blogpost_love', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_page', to='media.page')),
                ('post_notify_people', models.ManyToManyField(blank=True, related_name='post_notified_users', to=settings.AUTH_USER_MODEL)),
                ('sad', models.ManyToManyField(blank=True, related_name='blogpost_sad', to=settings.AUTH_USER_MODEL)),
                ('share', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_post', to='publish.post')),
                ('shared', models.ManyToManyField(blank=True, related_name='post_share_users', to=settings.AUTH_USER_MODEL)),
                ('wow', models.ManyToManyField(blank=True, related_name='blogpost_wow', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-DatePublished'],
            },
        ),
        migrations.CreateModel(
            name='PostFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, max_length=300, null=True)),
                ('media', models.FileField(blank=True, null=True, upload_to=publish.models.get_post_upload_path)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_file', to='publish.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('DatePublished', models.DateTimeField(auto_now_add=True)),
                ('is_reply', models.BooleanField(default=False)),
                ('is_snippet', models.BooleanField(default=False)),
                ('video', models.FileField(blank=True, null=True, upload_to=publish.models.get_post_upload_path)),
                ('img', models.ImageField(blank=True, null=True, upload_to=publish.models.get_post_upload_path)),
                ('record', models.FileField(blank=True, null=True, upload_to=publish.models.get_post_upload_path)),
                ('angry', models.ManyToManyField(blank=True, related_name='comment_angry', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('haha', models.ManyToManyField(blank=True, related_name='comment_haha', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='comment_like', to=settings.AUTH_USER_MODEL)),
                ('love', models.ManyToManyField(blank=True, related_name='comment_love', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='publish.post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='publish.comment')),
                ('sad', models.ManyToManyField(blank=True, related_name='comment_sad', to=settings.AUTH_USER_MODEL)),
                ('snippet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='publish.comment')),
                ('wow', models.ManyToManyField(blank=True, related_name='comment_wow', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
